-- --Retrieve the total number of orders placed.--

SELECT 
    COUNT(ORDER_ID) AS TOTAL_NO_OF_ORDER_PLACED
FROM
    ORDERS;
    
    -- Calculate the total revenue generated from pizza sales.-- 

SELECT 
    ROUND(SUM(PIZZAS.PRICE * ORDERDETAILS.QUANTITY),
            2) AS TOTAL_N0_REVENUE_GENERATED
FROM
    PIZZAS
        JOIN
    ORDERDETAILS ON PIZZAS.PIZZA_ID = ORDERDETAILS.PIZZA_ID;
    
    -- Identify the highest-priced pizza.

SELECT 
    PIZZATYPES.NAME, PIZZAS.PRICE
FROM
    PIZZATYPES
        JOIN
    PIZZAS ON PIZZATYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
ORDER BY PIZZAS.PRICE DESC
LIMIT 1;


-- Identify the most common pizza size ordered.

SELECT 
    PIZZAS.SIZE, COUNT(ORDERDETAILS.QUANTITY) AS TOTAL_QUANTITY
FROM
    PIZZAS
        JOIN
    ORDERDETAILS ON PIZZAS.PIZZA_ID = ORDERDETAILS.PIZZA_ID
GROUP BY PIZZAS.SIZE
ORDER BY TOTAL_QUANTITY DESC
LIMIT 1;

-- List the top 5 most ordered pizza types along with their quantities.

SELECT 
    (PIZZAS.PIZZA_TYPE_ID) AS PIZZA_TYPES,
    SUM(ORDERDETAILS.QUANTITY) AS QUANTITY
FROM
    PIZZAS
        JOIN
    orderdetails ON PIZZAS.PIZZA_ID = ORDERDETAILS.PIZZA_ID
GROUP BY PIZZAS.PIZZA_TYPE_ID
ORDER BY QUANTITY DESC
LIMIT 5;

-- Join the necessary tables to find the total quantity of each pizza category ordered.

SELECT 
    (PIZZATYPES.CATEGORY) AS PIZZA_CATEGORY,
    SUM(ORDERDETAILS.QUANTITY) AS QUANTITY
FROM
    PIZZATYPES
        JOIN
    PIZZAS ON PIZZATYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
        JOIN
    ORDERDETAILS ON ORDERDETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
GROUP BY PIZZA_CATEGORY
ORDER BY QUANTITY DESC;

-- Determine the distribution of orders by hour of the day.

SELECT 
    HOUR(ORDER_TIME) AS HOUR, COUNT(ORDER_ID) AS TOATL_ORDERS
FROM
    ORDERS
GROUP BY HOUR
ORDER BY HOUR ASC;

-- Join relevant tables to find the category-wise distribution of pizzas.

SELECT 
    CATEGORY, COUNT(NAME) AS DISTRIBUTION
FROM
    PIZZATYPES
GROUP BY CATEGORY;

-- Group the orders by date and calculate the average number of pizzas ordered per day.

SELECT 
    ROUND(AVG(ORDER_QUANTITY), 0) AS AVERAGE_ORDERS
FROM
    (SELECT 
        (ORDERS.ORDER_DATE) AS DATE,
            SUM(ORDERDETAILS.QUANTITY) AS ORDER_QUANTITY
    FROM
        ORDERS
    JOIN ORDERDETAILS ON ORDERS.ORDER_ID = orderdetails.ORDER_ID
    GROUP BY DATE) AS TOTAL_ORDER_QUANTITY;
    
    -- Determine the top 3 most ordered pizza types based on revenue.

SELECT 
    (PIZZATYPES.NAME) AS PIZZA_NAME,
    ROUND(SUM((PIZZAS.PRICE) * (orderdetails.QUANTITY)),
            2) AS REVENUE
FROM
    PIZZATYPES
        JOIN
    PIZZAS ON PIZZATYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
        JOIN
    orderdetails ON PIZZAS.PIZZA_ID = ORDERDETAILS.PIZZA_ID
GROUP BY PIZZA_NAME
ORDER BY REVENUE DESC
LIMIT 3;

--  Calculate the percentage contribution of each pizza type to total revenue.

SELECT (PIZZAS.PIZZA_TYPE_ID) AS PIZZA_TYPE,ROUND((SUM((PIZZAS.PRICE)*(orderdetails.QUANTITY))/(SELECT 
    ROUND(SUM(PIZZAS.PRICE * ORDERDETAILS.QUANTITY),
            2) AS TOTAL_N0_REVENUE_GENERATED
FROM
    PIZZAS
        JOIN
    ORDERDETAILS ON PIZZAS.PIZZA_ID = ORDERDETAILS.PIZZA_ID))*100,2) AS PERCENTAGE_CONTRI
    FROM PIZZAS JOIN ORDERDETAILS
    ON PIZZAS.PIZZA_ID=orderdetails.PIZZA_ID
    GROUP BY PIZZA_TYPE;

-- Analyze the cumulative revenue generated over time.

SELECT ORDER_DATE , SUM(REVENUE) OVER (ORDER BY ORDER_DATE) AS CUM_REVENUE FROM
(SELECT (ORDERS.ORDER_DATE) AS ORDER_DATE,ROUND(SUM((ORDERDETAILS.QUANTITY)*(PIZZAS.PRICE)),3)AS REVENUE
FROM ORDERS JOIN ORDERDETAILS
ON ORDERS.ORDER_ID=ORDERDETAILS.ORDER_ID
JOIN PIZZAS
ON PIZZAS.PIZZA_ID=ORDERDETAILS.PIZZA_ID
GROUP BY ORDER_DATE ) AS SALES;

-- Determine the top 3 most ordered pizza types based on revenue for each pizza category.

SELECT CATEGORY , NAME,REVENUE, 
RANK() OVER (PARTITION BY CATEGORY ORDER BY NAME DESC) AS RNK FROM
(SELECT PIZZATYPES.CATEGORY,PIZZATYPES.NAME,ROUND(SUM((ORDERDETAILS.QUANTITY)*(PIZZAS.PRICE)),2) AS REVENUE
FROM PIZZATYPES JOIN PIZZAS
ON PIZZATYPES.PIZZA_TYPE_ID=PIZZAS.PIZZA_TYPE_ID
JOIN ORDERDETAILS
ON ORDERDETAILS.PIZZA_ID=PIZZAS.PIZZA_ID
GROUP BY PIZZATYPES.CATEGORY,PIZZATYPES.NAME) AS A;
